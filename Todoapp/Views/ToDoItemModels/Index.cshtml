@model IEnumerable<Todoapp.Models.ToDoItemModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Your To Do List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th></th> <!-- Checkbox column -->
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                Deadline
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="@(item.Status == Todoapp.Models.Status.Completed ? "completed-task" : "")">
                <td>
                    <input type="checkbox" class="status-checkbox" data-id="@item.Id" @(item.Status == Todoapp.Models.Status.Completed ? "checked" : "") />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @item.Deadline?.ToString("g")
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>

</table>

@section Scripts {
    <script>
        document.querySelectorAll('.status-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const taskId = this.getAttribute('data-id');
                const isChecked = this.checked;

                // Update the row's appearance dynamically
                const row = this.closest('tr');
                if (isChecked) {
                    row.classList.add('completed-task');
                } else {
                    row.classList.remove('completed-task');
                }

                // Send the status update to the server
                fetch(`/ToDoItemModels/UpdateStatus/${taskId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ status: isChecked ? 'Completed' : 'NotStarted' })
                }).then(response => {
                    if (!response.ok) {
                        alert('Failed to update status.');
                    }
                });
            });
        });
    </script>
}


<style>
    .completed-task td {
        text-decoration: line-through;
        opacity: 0.6;
    }

        .completed-task td a {
            text-decoration: none; /* Ensure links do not have a strikethrough */
        }
</style>

